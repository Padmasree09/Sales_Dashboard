{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar _a;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LoginComponent = void 0;\n\nconst core_1 = require(\"@angular/core\");\n\nlet LoginComponent = class LoginComponent {\n  constructor(router) {\n    this.router = router;\n    this.email = '';\n    this.password = '';\n  }\n\n  ngOnInit() {} // Method triggered on form submission\n\n\n  onLogin() {\n    // You can set any condition to validate the input\n    if (this.email && this.password) {\n      // Navigate to the desired page after successful login\n      this.router.navigate(['/dashboard']); // '/dashboard' is the route you want to navigate to\n    } else {\n      // Handle error if input is empty or invalid (optional)\n      alert('Please enter a valid email and password');\n    }\n  }\n\n};\nLoginComponent = __decorate([(0, core_1.Component)({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.scss\"]\n}), __metadata(\"design:paramtypes\", [typeof (_a = typeof Router !== \"undefined\" && Router) === \"function\" ? _a : Object])], LoginComponent);\nexports.LoginComponent = LoginComponent;","map":null,"metadata":{},"sourceType":"script"}