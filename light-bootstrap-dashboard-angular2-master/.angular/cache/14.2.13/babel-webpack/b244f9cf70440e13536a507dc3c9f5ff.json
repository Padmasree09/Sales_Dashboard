{"ast":null,"code":"\"use strict\";\n\nexports.ISOWeekParser = void 0;\n\nvar _index = require(\"../../../setISOWeek.cjs\");\n\nvar _index2 = require(\"../../../startOfISOWeek.cjs\");\n\nvar _constants = require(\"../constants.cjs\");\n\nvar _Parser = require(\"../Parser.cjs\");\n\nvar _utils = require(\"../utils.cjs\"); // ISO week of year\n\n\nclass ISOWeekParser extends _Parser.Parser {\n  priority = 100;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"I\":\n        return (0, _utils.parseNumericPattern)(_constants.numericPatterns.week, dateString);\n\n      case \"Io\":\n        return match.ordinalNumber(dateString, {\n          unit: \"week\"\n        });\n\n      default:\n        return (0, _utils.parseNDigits)(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 53;\n  }\n\n  set(date, _flags, value) {\n    return (0, _index2.startOfISOWeek)((0, _index.setISOWeek)(date, value));\n  }\n\n  incompatibleTokens = [\"y\", \"Y\", \"u\", \"q\", \"Q\", \"M\", \"L\", \"w\", \"d\", \"D\", \"e\", \"c\", \"t\", \"T\"];\n}\n\nexports.ISOWeekParser = ISOWeekParser;","map":null,"metadata":{},"sourceType":"script"}