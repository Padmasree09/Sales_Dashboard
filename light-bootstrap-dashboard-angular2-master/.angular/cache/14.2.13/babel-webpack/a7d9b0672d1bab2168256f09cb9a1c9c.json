{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LoginComponent = void 0;\n\nconst forms_1 = require(\"@angular/forms\");\n\nconst router_1 = require(\"@angular/router\");\n\nconst i0 = require(\"@angular/core\");\n\nconst i1 = require(\"@angular/forms\");\n\nconst i2 = require(\"@angular/router\");\n\nconst i3 = require(\"@angular/material/button\");\n\nconst i4 = require(\"@angular/material/form-field\");\n\nconst i5 = require(\"@angular/material/input\");\n\nconst i6 = require(\"@angular/material/card\");\n\nconst _c0 = [\"signInNgForm\"]; // import { fuseAnimations } from '@fuse/animations';\n// import { FuseAlertComponent, FuseAlertType } from '@fuse/components/alert';\n// import { AuthService } from 'app/core/auth/auth.service';\n\nclass LoginComponent {\n  constructor(fb, router) {\n    this.fb = fb;\n    this.router = router;\n    this.currentImageIndex = 0;\n    this.images = [\"/assets/img/image_1.png\", \"/assets/img/image_2.png\", \"/assets/img/image_3.png\", \"/assets/img/image_4.png\"];\n    this.imageTexts = [\"Ramky Infrastructure\", \"Ramky Estates and Farms\", \"Ramky Foundation\", \"Smilax Laboratories\"]; // alert: { type: FuseAlertType; message: string } = {\n    //   type: \"success\",\n    //   message: \"\",\n    // };\n    // signInForm: UntypedFormGroup;\n\n    this.showAlert = false;\n    this.signInForm = this.fb.group({\n      ZUSER: ['', forms_1.Validators.required],\n      ZPASSWORD: ['', forms_1.Validators.required] // Password\n\n    });\n  } // Method triggered on form submission\n\n\n  onSubmit() {\n    if (this.signInForm.valid) {\n      const username = this.signInForm.get('ZUSER')?.value;\n      const password = this.signInForm.get('ZPASSWORD')?.value; // Replace this part with your actual authentication logic\n\n      if (username && password) {\n        // Navigate to the dashboard page after successful login\n        this.router.navigate(['/dashboard']);\n      } else {\n        // You can show an error message here\n        alert('Please enter valid username and password.');\n      }\n    } else {\n      // You can show an error message if the form is invalid\n      alert('Form is not valid. Please fill in all required fields.');\n    }\n  } // signIn(): void {\n  //   if (this.signInForm.invalid) {\n  //     return;\n  //   }\n  //   this.signInForm.disable();\n  //   this.showAlert = false;\n  //   this._authService.signIn(this.signInForm.value).subscribe(\n  //     () => {\n  //       const redirectURL =\n  //         this._activatedRoute.snapshot.queryParamMap.get(\"redirectURL\") ||\n  //         \"/signed-in-redirect\";\n  //       this._router.navigateByUrl(redirectURL);\n  //     },\n  //     (response) => {\n  //       this.signInForm.enable();\n  //       this.signInNgForm.resetForm();\n  //       this.alert = {\n  //         type: \"error\",\n  //         message: \"Wrong email or password\",\n  //       };\n  //       this.showAlert = true;\n  //     }\n  //   );\n  // }\n\n\n  autoChangeImageAndText() {\n    const intervalTime = 5000; // Time between transitions (5 seconds)\n\n    setInterval(() => {\n      const images = document.querySelectorAll(\".background-img\");\n      const textContainer = document.querySelector(\".dynamic-text\"); // Remove 'active' class from the current image\n\n      images[this.currentImageIndex].classList.remove(\"active\"); // Change to the next image\n\n      this.currentImageIndex = (this.currentImageIndex + 1) % images.length; // Add 'active' class to the new image\n\n      images[this.currentImageIndex].classList.add(\"active\"); // Change the dynamic text to match the current image\n\n      textContainer.textContent = this.imageTexts[this.currentImageIndex]; // Reset and reapply the text reveal animation\n\n      textContainer.classList.remove(\"intro-reveal\");\n      setTimeout(() => {\n        textContainer.classList.add(\"intro-reveal\");\n      }, 10); // Delay for the animation reset\n    }, intervalTime);\n  }\n\n}\n\nexports.LoginComponent = LoginComponent;\n\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router));\n};\n\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  viewQuery: function LoginComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.signInNgForm = _t.first);\n    }\n  },\n  decls: 31,\n  vars: 1,\n  consts: [[1, \"flex\", \"flex-col\", \"w-full\", \"h-full\"], [1, \"login-container\"], [1, \"login-image\"], [1, \"text-container\"], [1, \"image-text\"], [1, \"fixed-text\"], [1, \"divider\"], [1, \"dynamic-text\"], [\"src\", \"/assets/img/image_1.png\", \"alt\", \"Image 1\", 1, \"background-img\", \"active\"], [\"src\", \"/assets/img/image_2.png\", \"alt\", \"Image 2\", 1, \"background-img\"], [\"src\", \"/assets/img/image_3.png\", \"alt\", \"Image 3\", 1, \"background-img\"], [\"src\", \"/assets/img/image_4.png\", \"alt\", \"Image 4\", 1, \"background-img\"], [1, \"login-form\"], [1, \"logo-container\"], [\"src\", \"/assets/img/ramky.png\", \"alt\", \"Logo\", 1, \"login-logo\"], [3, \"formGroup\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"ZUSER\", \"required\", \"\"], [\"matInput\", \"\", \"type\", \"password\", \"formControlName\", \"ZPASSWORD\", \"required\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h1\", 4)(5, \"span\", 5);\n      i0.ɵɵtext(6, \"RAMKY\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"span\", 6);\n      i0.ɵɵtext(8, \"|\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"span\", 7);\n      i0.ɵɵtext(10, \"Battery\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(11, \"img\", 8)(12, \"img\", 9)(13, \"img\", 10)(14, \"img\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 12)(16, \"mat-card\")(17, \"div\", 13);\n      i0.ɵɵelement(18, \"img\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"mat-card-content\")(20, \"form\", 15)(21, \"mat-form-field\", 16)(22, \"mat-label\");\n      i0.ɵɵtext(23, \"User Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(24, \"input\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"mat-form-field\", 16)(26, \"mat-label\");\n      i0.ɵɵtext(27, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(28, \"input\", 18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"button\", 19);\n      i0.ɵɵtext(30, \" Log in \");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(20);\n      i0.ɵɵproperty(\"formGroup\", ctx.signInForm);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i3.MatButton, i4.MatFormField, i4.MatLabel, i5.MatInput, i6.MatCard, i6.MatCardContent],\n  styles: [\".login-container[_ngcontent-%COMP%]{display:flex;height:100vh;position:relative}.login-container[_ngcontent-%COMP%]   .login-image[_ngcontent-%COMP%]{flex:3;overflow:hidden;position:relative;background-color:#000}.login-container[_ngcontent-%COMP%]   .login-image[_ngcontent-%COMP%]   .background-img[_ngcontent-%COMP%]{position:absolute;top:0;left:0;width:100%;height:100vh;object-fit:cover;opacity:0;transition:opacity 1.5s ease-in-out}.login-container[_ngcontent-%COMP%]   .login-image[_ngcontent-%COMP%]   .active[_ngcontent-%COMP%]{opacity:1}.login-container[_ngcontent-%COMP%]   .login-image[_ngcontent-%COMP%]   .text-container[_ngcontent-%COMP%]{position:absolute;bottom:25%;left:5%;color:#fff;z-index:1;text-align:left}.login-container[_ngcontent-%COMP%]   .login-image[_ngcontent-%COMP%]   .text-container[_ngcontent-%COMP%]   h1.image-text[_ngcontent-%COMP%]{font-family:Montserrat,sans-serif;font-size:5rem;font-weight:700;line-height:1.3;letter-spacing:.08em;text-transform:uppercase;text-shadow:3px 3px 15px rgba(0,0,0,.8);margin:0;opacity:.95}.login-container[_ngcontent-%COMP%]   .login-image[_ngcontent-%COMP%]   .text-container[_ngcontent-%COMP%]   h1.image-text[_ngcontent-%COMP%]   .fixed-text[_ngcontent-%COMP%]{font-weight:700;margin-right:15px}.login-container[_ngcontent-%COMP%]   .login-image[_ngcontent-%COMP%]   .text-container[_ngcontent-%COMP%]   h1.image-text[_ngcontent-%COMP%]   .divider[_ngcontent-%COMP%]{font-weight:400;margin-right:15px}.login-container[_ngcontent-%COMP%]   .login-image[_ngcontent-%COMP%]   .text-container[_ngcontent-%COMP%]   h1.image-text[_ngcontent-%COMP%]   .dynamic-text[_ngcontent-%COMP%]{font-weight:lighter;opacity:0;font-size:3rem;animation:textReveal 1.5s ease-in-out;transition:opacity 1s,transform 1s}.login-container[_ngcontent-%COMP%]   .login-image[_ngcontent-%COMP%]   .text-container[_ngcontent-%COMP%]   h1.image-text[_ngcontent-%COMP%]   .dynamic-text.intro-reveal[_ngcontent-%COMP%]{opacity:1;transform:translateY(0)}.login-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]{flex:1;display:flex;flex-direction:column;align-items:center;justify-content:center;background-color:#ffffffd9;padding:20px;border-radius:10px}.login-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]{width:100%;max-width:400px;padding:20px;box-shadow:0 4px 8px #0000001a}.login-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]   mat-card-content[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:stretch}.login-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]   mat-card-content[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]{margin-bottom:20px}.login-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]   mat-card-content[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:100%;padding:12px;font-size:1rem}.login-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]   .logo-container[_ngcontent-%COMP%]{display:flex;justify-content:center;margin-bottom:20px}.login-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]   .logo-container[_ngcontent-%COMP%]   .login-logo[_ngcontent-%COMP%]{width:150px;height:auto}@keyframes textReveal{0%{opacity:0;transform:translateY(50px)}to{opacity:1;transform:translateY(0)}}@media (max-width: 768px){.login-container[_ngcontent-%COMP%]{flex-direction:column}.login-container[_ngcontent-%COMP%]   .login-image[_ngcontent-%COMP%]{position:absolute;top:0;left:0;width:100%;height:100%;filter:blur(2px)}.login-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]{position:relative;flex:none;background-color:#ffffff0a;width:100%;max-width:none}}.product[_ngcontent-%COMP%]{color:#ce154d!important;margin-top:6px;font-size:16px;white-space:nowrap}\"]\n});","map":null,"metadata":{},"sourceType":"script"}