{"ast":null,"code":"\"use strict\";\n\nexports.formatRFC7231 = formatRFC7231;\n\nvar _index = require(\"./_lib/addLeadingZeros.cjs\");\n\nvar _index2 = require(\"./isValid.cjs\");\n\nvar _index3 = require(\"./toDate.cjs\");\n\nconst days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\nconst months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n/**\n * @name formatRFC7231\n * @category Common Helpers\n * @summary Format the date according to the RFC 7231 standard (https://tools.ietf.org/html/rfc7231#section-7.1.1.1).\n *\n * @description\n * Return the formatted date string in RFC 7231 format.\n * The result will always be in UTC timezone.\n *\n * @param date - The original date\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n *\n * @example\n * // Represent 18 September 2019 in RFC 7231 format:\n * const result = formatRFC7231(new Date(2019, 8, 18, 19, 0, 52))\n * //=> 'Wed, 18 Sep 2019 19:00:52 GMT'\n */\n\nfunction formatRFC7231(date) {\n  const _date = (0, _index3.toDate)(date);\n\n  if (!(0, _index2.isValid)(_date)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  const dayName = days[_date.getUTCDay()];\n\n  const dayOfMonth = (0, _index.addLeadingZeros)(_date.getUTCDate(), 2);\n\n  const monthName = months[_date.getUTCMonth()];\n\n  const year = _date.getUTCFullYear();\n\n  const hour = (0, _index.addLeadingZeros)(_date.getUTCHours(), 2);\n  const minute = (0, _index.addLeadingZeros)(_date.getUTCMinutes(), 2);\n  const second = (0, _index.addLeadingZeros)(_date.getUTCSeconds(), 2); // Result variables.\n\n  return `${dayName}, ${dayOfMonth} ${monthName} ${year} ${hour}:${minute}:${second} GMT`;\n}","map":null,"metadata":{},"sourceType":"script"}