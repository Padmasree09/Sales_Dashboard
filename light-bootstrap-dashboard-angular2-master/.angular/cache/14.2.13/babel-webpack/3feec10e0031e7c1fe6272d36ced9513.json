{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HomeComponent = void 0;\n\nconst sales_service_1 = require(\"app/sales.service\");\n\nconst lbd_chart_component_1 = require(\"app/lbd/lbd-chart/lbd-chart.component\");\n\nconst i0 = require(\"@angular/core\");\n\nconst i1 = require(\"app/sales.service\");\n\nconst i2 = require(\"@angular/common\");\n\nconst i3 = require(\"@angular/forms\");\n\nfunction HomeComponent_tr_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtext(13);\n    i0.ɵɵpipe(14, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵpipe(17, \"currency\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const sale_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(sale_r1[\"Sales Order\"]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(sale_r1[\"Sales Office\"]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 7, sale_r1[\"Document Date\"]));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(sale_r1[\"Customer Name\"]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(sale_r1[\"Material\"]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(14, 9, sale_r1[\"SO Value\"]));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(17, 11, sale_r1[\"Amount Invoiced\"]));\n  }\n}\n\nclass HomeComponent {\n  constructor(salesService) {\n    this.salesService = salesService;\n    this.salesData = [];\n    this.customerChartData = {};\n    this.materialGroupChartData = {};\n    this.customerChartType = lbd_chart_component_1.ChartType.Bar; // Use the enum for types\n\n    this.materialGroupChartType = lbd_chart_component_1.ChartType.Pie; // Use the enum for types\n\n    this.customerChartLegendItems = [];\n    this.materialGroupChartLegendItems = [];\n    this.lastUpdated = \"\";\n  }\n\n  ngOnInit() {\n    // Optionally fetch initial data or set up defaults\n    this.fromDate = \"\";\n    this.toDate = \"\";\n  }\n\n  onDateSubmit() {\n    this.fetchSalesData(this.fromDate, this.toDate);\n  }\n\n  fetchSalesData(fromDate, toDate) {\n    this.salesData = this.generateRandomSalesData();\n    const randomCustomerData = this.generateRandomCustomerData();\n    const randomMaterialGroupData = this.generateRandomMaterialGroupData();\n    this.customerChartData = this.prepareCustomerChartData(randomCustomerData);\n    this.materialGroupChartData = this.prepareMaterialGroupChartData(randomMaterialGroupData);\n    this.customerChartLegendItems = randomCustomerData.map(customer => ({\n      title: customer.name,\n      imageClass: \"fa fa-circle text-info\" // Example class for icons\n\n    }));\n    this.materialGroupChartLegendItems = randomMaterialGroupData.map(group => ({\n      title: group.name,\n      imageClass: \"fa fa-circle text-success\" // Example class for icons\n\n    }));\n    this.lastUpdated = new Date().toLocaleString();\n    console.log(\"Customer Chart Data:\", this.customerChartData);\n    console.log(\"Material Group Chart Data:\", this.materialGroupChartData);\n  }\n\n  generateRandomSalesData() {\n    const sales = [];\n\n    for (let i = 0; i < 10; i++) {\n      sales.push({\n        \"Sales Order\": `SO-${i + 1}`,\n        \"Sales Office\": `Office ${Math.floor(Math.random() * 5) + 1}`,\n        \"Document Date\": new Date(Date.now() - Math.random() * 10000000000),\n        \"Customer Name\": `Customer ${Math.floor(Math.random() * 10) + 1}`,\n        Material: `Material ${Math.floor(Math.random() * 10) + 1}`,\n        \"SO Value\": Math.floor(Math.random() * 1000) + 100,\n        \"Amount Invoiced\": Math.floor(Math.random() * 1000) + 100\n      });\n    }\n\n    return sales;\n  }\n\n  generateRandomCustomerData() {\n    const customers = [];\n    const customerNames = [\"Customer A\", \"Customer B\", \"Customer C\", \"Customer D\"];\n\n    for (let i = 0; i < 4; i++) {\n      const customer = {\n        name: customerNames[i],\n        totalSales: Math.floor(Math.random() * 10000) + 1000 // Random sales between 1000 and 11000\n\n      };\n      customers.push(customer);\n    }\n\n    return customers;\n  }\n\n  generateRandomMaterialGroupData() {\n    const materialGroups = [];\n    const groupNames = [\"Group 1\", \"Group 2\", \"Group 3\"];\n\n    for (let i = 0; i < 3; i++) {\n      const group = {\n        name: groupNames[i],\n        totalSales: Math.floor(Math.random() * 5000) + 500 // Random sales between 500 and 5500\n\n      };\n      materialGroups.push(group);\n    }\n\n    return materialGroups;\n  }\n\n  prepareCustomerChartData(customers) {\n    // Prepare chart data for top customers\n    return {\n      labels: customers.map(customer => customer.name),\n      datasets: [{\n        label: \"Sales\",\n        data: customers.map(customer => customer.totalSales),\n        backgroundColor: \"rgba(75, 192, 192, 0.2)\",\n        borderColor: \"rgba(75, 192, 192, 1)\",\n        borderWidth: 1\n      }]\n    };\n  }\n\n  prepareMaterialGroupChartData(materialGroups) {\n    // Prepare chart data for material groups\n    return {\n      labels: materialGroups.map(group => group.name),\n      datasets: [{\n        data: materialGroups.map(group => group.totalSales),\n        backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#4BC0C0\", \"#9966FF\"]\n      }]\n    };\n  }\n\n}\n\nexports.HomeComponent = HomeComponent;\n\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.SalesService));\n};\n\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 53,\n  vars: 17,\n  consts: [[1, \"main-content\"], [1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-12\"], [1, \"card\"], [1, \"header\"], [1, \"title\"], [1, \"category\"], [1, \"content\"], [3, \"submit\"], [1, \"form-group\"], [\"for\", \"fromDate\"], [\"type\", \"date\", \"id\", \"fromDate\", \"name\", \"fromDate\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"toDate\"], [\"type\", \"date\", \"id\", \"toDate\", \"name\", \"toDate\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"col-md-6\"], [3, \"title\", \"subtitle\", \"chartType\", \"chartData\", \"legendItems\", \"withHr\", \"footerText\"], [1, \"content\", \"table-responsive\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h4\", 6);\n      i0.ɵɵtext(7, \"Select Date Range\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"p\", 7);\n      i0.ɵɵtext(9, \"Filter Data by Date\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 8)(11, \"form\", 9);\n      i0.ɵɵlistener(\"submit\", function HomeComponent_Template_form_submit_11_listener() {\n        return ctx.onDateSubmit();\n      });\n      i0.ɵɵelementStart(12, \"div\", 10)(13, \"label\", 11);\n      i0.ɵɵtext(14, \"From Date:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function HomeComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.fromDate = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 10)(17, \"label\", 13);\n      i0.ɵɵtext(18, \"To Date:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"input\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function HomeComponent_Template_input_ngModelChange_19_listener($event) {\n        return ctx.toDate = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"button\", 15);\n      i0.ɵɵtext(21, \"Submit\");\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelementStart(22, \"div\", 2)(23, \"div\", 16);\n      i0.ɵɵelement(24, \"lbd-chart\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"div\", 16);\n      i0.ɵɵelement(26, \"lbd-chart\", 17);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"div\", 2)(28, \"div\", 3)(29, \"div\", 4)(30, \"div\", 5)(31, \"h4\", 6);\n      i0.ɵɵtext(32, \"Sales Data Table\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(33, \"div\", 18)(34, \"table\", 19)(35, \"thead\")(36, \"tr\")(37, \"th\");\n      i0.ɵɵtext(38, \"Sales Order\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"th\");\n      i0.ɵɵtext(40, \"Sales Office\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"th\");\n      i0.ɵɵtext(42, \"Document Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"th\");\n      i0.ɵɵtext(44, \"Customer Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(45, \"th\");\n      i0.ɵɵtext(46, \"Material\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(47, \"th\");\n      i0.ɵɵtext(48, \"SO Value\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(49, \"th\");\n      i0.ɵɵtext(50, \"Amount Invoiced\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(51, \"tbody\");\n      i0.ɵɵtemplate(52, HomeComponent_tr_52_Template, 18, 13, \"tr\", 20);\n      i0.ɵɵelementEnd()()()()()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngModel\", ctx.fromDate);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.toDate);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"title\", \"Top 5 Customers\")(\"subtitle\", \"Sales Transactions Overview\")(\"chartType\", ctx.customerChartType)(\"chartData\", ctx.customerChartData)(\"legendItems\", ctx.customerChartLegendItems)(\"withHr\", true)(\"footerText\", \"Updated on: \" + ctx.lastUpdated);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"title\", \"Material Group Distribution\")(\"subtitle\", \"Sales by Material Group\")(\"chartType\", ctx.materialGroupChartType)(\"chartData\", ctx.materialGroupChartData)(\"legendItems\", ctx.materialGroupChartLegendItems)(\"withHr\", true)(\"footerText\", \"Updated on: \" + ctx.lastUpdated);\n      i0.ɵɵadvance(26);\n      i0.ɵɵproperty(\"ngForOf\", ctx.salesData);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm, i2.CurrencyPipe, i2.DatePipe]\n});","map":null,"metadata":{},"sourceType":"script"}