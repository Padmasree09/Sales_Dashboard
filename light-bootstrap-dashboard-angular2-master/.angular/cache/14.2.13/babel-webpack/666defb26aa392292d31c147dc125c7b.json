{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LbdChartComponent = exports.ChartType = void 0; // import {\n//   AfterViewInit,\n//   ChangeDetectionStrategy,\n//   Component,\n//   Input,\n//   OnInit,\n// } from \"@angular/core\";\n// import * as Chartist from \"chartist\";\n// export interface LegendItem {\n//   title: string;\n//   imageClass: string;\n// }\n// export enum ChartType {\n//   Pie,\n//   Line,\n//   Bar,\n// }\n// @Component({\n//   selector: \"lbd-chart\",\n//   templateUrl: \"./lbd-chart.component.html\",\n//   changeDetection: ChangeDetectionStrategy.OnPush,\n// })\n// export class LbdChartComponent implements OnInit, AfterViewInit {\n//   static currentId = 1;\n//   @Input()\n//   public title: string;\n//   @Input()\n//   public subtitle: string;\n//   @Input()\n//   public chartClass: string;\n//   @Input()\n//   public chartType: ChartType;\n//   @Input()\n//   public chartData: any;\n//   @Input()\n//   public chartOptions: any;\n//   @Input()\n//   public chartResponsive: any[];\n//   @Input()\n//   public footerIconClass: string;\n//   @Input()\n//   public footerText: string;\n//   @Input()\n//   public legendItems: LegendItem[];\n//   @Input()\n//   public withHr: boolean;\n//   public chartId: string;\n//   constructor() {}\n//   public ngOnInit(): void {\n//     this.chartId = `lbd-chart-${LbdChartComponent.currentId++}`;\n//   }\n//   public ngAfterViewInit(): void {\n//     switch (this.chartType) {\n//       case ChartType.Pie:\n//         new Chartist.Pie(\n//           `#${this.chartId}`,\n//           this.chartData,\n//           this.chartOptions,\n//           this.chartResponsive\n//         );\n//         break;\n//       case ChartType.Line:\n//         new Chartist.Line(\n//           `#${this.chartId}`,\n//           this.chartData,\n//           this.chartOptions,\n//           this.chartResponsive\n//         );\n//         break;\n//       case ChartType.Bar:\n//         new Chartist.Bar(\n//           `#${this.chartId}`,\n//           this.chartData,\n//           this.chartOptions,\n//           this.chartResponsive\n//         );\n//         break;\n//     }\n//   }\n//   public updateChart(): void {\n//     if (this.chartType === ChartType.Pie) {\n//       new Chartist.Pie(\n//         `#${this.chartId}`,\n//         this.chartData,\n//         this.chartOptions,\n//         this.chartResponsive\n//       );\n//     } else if (this.chartType === ChartType.Line) {\n//       new Chartist.Line(\n//         `#${this.chartId}`,\n//         this.chartData,\n//         this.chartOptions,\n//         this.chartResponsive\n//       );\n//     } else if (this.chartType === ChartType.Bar) {\n//       new Chartist.Bar(\n//         `#${this.chartId}`,\n//         this.chartData,\n//         this.chartOptions,\n//         this.chartResponsive\n//       );\n//     }\n//   }\n// }\n\nconst core_1 = require(\"@angular/core\");\n\nconst Chartist = require(\"chartist\");\n\nconst i0 = require(\"@angular/core\");\n\nconst i1 = require(\"@angular/common\");\n\nfunction LbdChartComponent_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵelement(1, \"i\", 10);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", item_r2.imageClass);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r2.title, \" \");\n  }\n}\n\nfunction LbdChartComponent_hr_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"hr\");\n  }\n}\n\nvar ChartType;\n\n(function (ChartType) {\n  ChartType[ChartType[\"Pie\"] = 0] = \"Pie\";\n  ChartType[ChartType[\"Line\"] = 1] = \"Line\";\n  ChartType[ChartType[\"Bar\"] = 2] = \"Bar\";\n})(ChartType = exports.ChartType || (exports.ChartType = {}));\n\nclass LbdChartComponent {\n  constructor() {\n    this.chartOptions = {};\n    this.chartResponsive = [];\n    this.legendItems = [];\n  }\n\n  ngOnInit() {\n    this.chartId = `lbd-chart-${LbdChartComponent.currentId++}`;\n  }\n\n  ngAfterViewInit() {\n    this.renderChart();\n  }\n\n  ngOnChanges(changes) {\n    if (changes.chartData && !changes.chartData.firstChange) {\n      this.renderChart();\n    }\n  }\n\n  renderChart() {\n    const chartData = this.chartData;\n\n    if (chartData) {\n      switch (this.chartType) {\n        case ChartType.Pie:\n          new Chartist.Pie(`#${this.chartId}`, chartData, this.chartOptions, this.chartResponsive);\n          break;\n\n        case ChartType.Line:\n          new Chartist.Line(`#${this.chartId}`, chartData, this.chartOptions, this.chartResponsive);\n          break;\n\n        case ChartType.Bar:\n          new Chartist.Bar(`#${this.chartId}`, chartData, this.chartOptions, this.chartResponsive);\n          break;\n      }\n    }\n  }\n\n}\n\nexports.LbdChartComponent = LbdChartComponent;\nLbdChartComponent.currentId = 1;\n\nLbdChartComponent.ɵfac = function LbdChartComponent_Factory(t) {\n  return new (t || LbdChartComponent)();\n};\n\nLbdChartComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LbdChartComponent,\n  selectors: [[\"lbd-chart\"]],\n  inputs: {\n    title: \"title\",\n    subtitle: \"subtitle\",\n    chartClass: \"chartClass\",\n    chartType: \"chartType\",\n    chartData: \"chartData\",\n    chartOptions: \"chartOptions\",\n    chartResponsive: \"chartResponsive\",\n    footerIconClass: \"footerIconClass\",\n    footerText: \"footerText\",\n    legendItems: \"legendItems\",\n    withHr: \"withHr\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 15,\n  vars: 10,\n  consts: [[1, \"card\"], [1, \"header\"], [1, \"title\"], [1, \"category\"], [1, \"content\"], [1, \"footer\"], [1, \"legend\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"stats\"], [3, \"ngClass\"]],\n  template: function LbdChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h4\", 2);\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"p\", 3);\n      i0.ɵɵtext(5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"div\", 4);\n      i0.ɵɵelement(7, \"div\");\n      i0.ɵɵelementStart(8, \"div\", 5)(9, \"div\", 6);\n      i0.ɵɵtemplate(10, LbdChartComponent_span_10_Template, 3, 2, \"span\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, LbdChartComponent_hr_11_Template, 1, 0, \"hr\", 8);\n      i0.ɵɵelementStart(12, \"div\", 9);\n      i0.ɵɵelement(13, \"i\", 10);\n      i0.ɵɵtext(14);\n      i0.ɵɵelementEnd()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.title);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.subtitle);\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassMapInterpolate1(\"ct-chart \", ctx.chartClass, \"\");\n      i0.ɵɵattribute(\"id\", ctx.chartId);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.legendItems);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.withHr);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", ctx.footerIconClass);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.footerText, \" \");\n    }\n  },\n  dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});","map":null,"metadata":{},"sourceType":"script"}