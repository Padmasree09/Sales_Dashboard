{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HomeComponent = void 0;\n\nconst Chartist = require(\"chartist\");\n\nconst lbd_chart_component_1 = require(\"../lbd/lbd-chart/lbd-chart.component\");\n\nconst i0 = require(\"@angular/core\");\n\nconst i1 = require(\"@angular/common\");\n\nconst i2 = require(\"@angular/forms\");\n\nconst i3 = require(\"../lbd/lbd-chart/lbd-chart.component\");\n\nfunction HomeComponent_tr_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtext(13);\n    i0.ɵɵpipe(14, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵpipe(17, \"currency\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const sale_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(sale_r1[\"Sales Order\"]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(sale_r1[\"Sales Office\"]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 7, sale_r1[\"Document Date\"]));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(sale_r1[\"Customer Name\"]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(sale_r1[\"Material\"]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(14, 9, sale_r1[\"SO Value\"]));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(17, 11, sale_r1[\"Amount Invoiced\"]));\n  }\n}\n\nclass HomeComponent {\n  constructor() {}\n\n  ngOnInit() {\n    // Default Chart Data\n    this.emailChartType = lbd_chart_component_1.ChartType.Pie;\n    this.emailChartData = {\n      labels: [\"62%\", \"32%\", \"6%\"],\n      series: [62, 32, 6]\n    };\n    this.filteredEmailChartData = this.emailChartData; // Initial filtered data is the same\n\n    this.emailChartLegendItems = [{\n      title: \"Open\",\n      imageClass: \"fa fa-circle text-info\"\n    }, {\n      title: \"Bounce\",\n      imageClass: \"fa fa-circle text-danger\"\n    }, {\n      title: \"Unsubscribe\",\n      imageClass: \"fa fa-circle text-warning\"\n    }];\n    this.hoursChartType = lbd_chart_component_1.ChartType.Line;\n    this.hoursChartData = {\n      labels: [\"9:00AM\", \"12:00AM\", \"3:00PM\", \"6:00PM\", \"9:00PM\", \"12:00PM\", \"3:00AM\", \"6:00AM\"],\n      series: [[287, 385, 490, 492, 554, 586, 698, 695, 752, 788, 846, 944], [67, 152, 143, 240, 287, 335, 435, 437, 539, 542, 544, 647], [23, 113, 67, 108, 190, 239, 307, 308, 439, 410, 410, 509]]\n    };\n    this.filteredHoursChartData = this.hoursChartData; // Initial filtered data is the same\n\n    this.hoursChartOptions = {\n      low: 0,\n      high: 800,\n      showArea: true,\n      height: \"245px\",\n      axisX: {\n        showGrid: false\n      },\n      lineSmooth: Chartist.Interpolation.simple({\n        divisor: 3\n      }),\n      showLine: false,\n      showPoint: false\n    };\n    this.hoursChartResponsive = [[\"screen and (max-width: 640px)\", {\n      axisX: {\n        labelInterpolationFnc: function (value) {\n          return value[0];\n        }\n      }\n    }]];\n    this.hoursChartLegendItems = [{\n      title: \"Open\",\n      imageClass: \"fa fa-circle text-info\"\n    }, {\n      title: \"Click\",\n      imageClass: \"fa fa-circle text-danger\"\n    }, {\n      title: \"Click Second Time\",\n      imageClass: \"fa fa-circle text-warning\"\n    }];\n  } // Method to process date range input and filter data\n\n\n  onDateSubmit() {\n    console.log(\"From Date:\", this.fromDate);\n    console.log(\"To Date:\", this.toDate); // You can add logic here to filter the chart data based on the selected dates\n    // For example, you might compare the dates in your dataset and update the chart data accordingly.\n    // Example of filtered data (you should replace this with actual logic):\n\n    if (this.fromDate && this.toDate) {\n      this.filteredEmailChartData = {\n        labels: [\"50%\", \"30%\", \"20%\"],\n        series: [50, 30, 20] // Example filtered data based on dates\n\n      };\n    }\n  }\n\n}\n\nexports.HomeComponent = HomeComponent;\n\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)();\n};\n\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 53,\n  vars: 17,\n  consts: [[1, \"main-content\"], [1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-12\"], [1, \"card\"], [1, \"header\"], [1, \"title\"], [1, \"category\"], [1, \"content\"], [3, \"submit\"], [1, \"form-group\"], [\"for\", \"fromDate\"], [\"type\", \"date\", \"id\", \"fromDate\", \"name\", \"fromDate\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"toDate\"], [\"type\", \"date\", \"id\", \"toDate\", \"name\", \"toDate\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"col-md-6\"], [3, \"title\", \"subtitle\", \"chartType\", \"chartData\", \"legendItems\", \"withHr\", \"footerText\"], [1, \"content\", \"table-responsive\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h4\", 6);\n      i0.ɵɵtext(7, \"Select Date Range\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"p\", 7);\n      i0.ɵɵtext(9, \"Filter Data by Date\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 8)(11, \"form\", 9);\n      i0.ɵɵlistener(\"submit\", function HomeComponent_Template_form_submit_11_listener() {\n        return ctx.onDateSubmit();\n      });\n      i0.ɵɵelementStart(12, \"div\", 10)(13, \"label\", 11);\n      i0.ɵɵtext(14, \"From Date:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function HomeComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.fromDate = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 10)(17, \"label\", 13);\n      i0.ɵɵtext(18, \"To Date:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"input\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function HomeComponent_Template_input_ngModelChange_19_listener($event) {\n        return ctx.toDate = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"button\", 15);\n      i0.ɵɵtext(21, \"Submit\");\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelementStart(22, \"div\", 2)(23, \"div\", 16);\n      i0.ɵɵelement(24, \"lbd-chart\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"div\", 16);\n      i0.ɵɵelement(26, \"lbd-chart\", 17);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"div\", 2)(28, \"div\", 3)(29, \"div\", 4)(30, \"div\", 5)(31, \"h4\", 6);\n      i0.ɵɵtext(32, \"Sales Data Table\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(33, \"div\", 18)(34, \"table\", 19)(35, \"thead\")(36, \"tr\")(37, \"th\");\n      i0.ɵɵtext(38, \"Sales Order\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"th\");\n      i0.ɵɵtext(40, \"Sales Office\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"th\");\n      i0.ɵɵtext(42, \"Document Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"th\");\n      i0.ɵɵtext(44, \"Customer Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(45, \"th\");\n      i0.ɵɵtext(46, \"Material\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(47, \"th\");\n      i0.ɵɵtext(48, \"SO Value\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(49, \"th\");\n      i0.ɵɵtext(50, \"Amount Invoiced\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(51, \"tbody\");\n      i0.ɵɵtemplate(52, HomeComponent_tr_52_Template, 18, 13, \"tr\", 20);\n      i0.ɵɵelementEnd()()()()()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngModel\", ctx.fromDate);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.toDate);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"title\", \"Top 5 Customers\")(\"subtitle\", \"Sales Transactions Overview\")(\"chartType\", ctx.customerChartType)(\"chartData\", ctx.customerChartData)(\"legendItems\", ctx.customerChartLegendItems)(\"withHr\", true)(\"footerText\", \"Updated on: \" + ctx.lastUpdated);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"title\", \"Material Group Distribution\")(\"subtitle\", \"Sales by Material Group\")(\"chartType\", ctx.materialGroupChartType)(\"chartData\", ctx.materialGroupChartData)(\"legendItems\", ctx.materialGroupChartLegendItems)(\"withHr\", true)(\"footerText\", \"Updated on: \" + ctx.lastUpdated);\n      i0.ɵɵadvance(26);\n      i0.ɵɵproperty(\"ngForOf\", ctx.salesData);\n    }\n  },\n  dependencies: [i1.NgForOf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm, i3.LbdChartComponent, i1.CurrencyPipe, i1.DatePipe]\n});","map":null,"metadata":{},"sourceType":"script"}