{"ast":null,"code":"\"use strict\";\n\nexports.getISOWeeksInYear = getISOWeeksInYear;\n\nvar _index = require(\"./addWeeks.cjs\");\n\nvar _index2 = require(\"./constants.cjs\");\n\nvar _index3 = require(\"./startOfISOWeekYear.cjs\");\n/**\n * The {@link getISOWeeksInYear} function options.\n */\n\n/**\n * @name getISOWeeksInYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of weeks in an ISO week-numbering year of the given date.\n *\n * @description\n * Get the number of weeks in an ISO week-numbering year of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The number of ISO weeks in a year\n *\n * @example\n * // How many weeks are in ISO week-numbering year 2015?\n * const result = getISOWeeksInYear(new Date(2015, 1, 11))\n * //=> 53\n */\n\n\nfunction getISOWeeksInYear(date, options) {\n  const thisYear = (0, _index3.startOfISOWeekYear)(date, options);\n  const nextYear = (0, _index3.startOfISOWeekYear)((0, _index.addWeeks)(thisYear, 60));\n  const diff = +nextYear - +thisYear; // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n\n  return Math.round(diff / _index2.millisecondsInWeek);\n}","map":null,"metadata":{},"sourceType":"script"}