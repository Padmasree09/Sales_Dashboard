{"ast":null,"code":"\"use strict\";\n\nexports.differenceInCalendarDays = differenceInCalendarDays;\n\nvar _index = require(\"./_lib/getTimezoneOffsetInMilliseconds.cjs\");\n\nvar _index2 = require(\"./_lib/normalizeDates.cjs\");\n\nvar _index3 = require(\"./constants.cjs\");\n\nvar _index4 = require(\"./startOfDay.cjs\");\n/**\n * The {@link differenceInCalendarDays} function options.\n */\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - The options object\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\n\n\nfunction differenceInCalendarDays(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = (0, _index2.normalizeDates)(options?.in, laterDate, earlierDate);\n  const laterStartOfDay = (0, _index4.startOfDay)(laterDate_);\n  const earlierStartOfDay = (0, _index4.startOfDay)(earlierDate_);\n  const laterTimestamp = +laterStartOfDay - (0, _index.getTimezoneOffsetInMilliseconds)(laterStartOfDay);\n  const earlierTimestamp = +earlierStartOfDay - (0, _index.getTimezoneOffsetInMilliseconds)(earlierStartOfDay); // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n\n  return Math.round((laterTimestamp - earlierTimestamp) / _index3.millisecondsInDay);\n}","map":null,"metadata":{},"sourceType":"script"}