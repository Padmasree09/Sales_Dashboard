{"ast":null,"code":"\"use strict\";\n\nexports.differenceInCalendarISOWeeks = differenceInCalendarISOWeeks;\n\nvar _index = require(\"./_lib/getTimezoneOffsetInMilliseconds.cjs\");\n\nvar _index2 = require(\"./_lib/normalizeDates.cjs\");\n\nvar _index3 = require(\"./constants.cjs\");\n\nvar _index4 = require(\"./startOfISOWeek.cjs\");\n/**\n * The {@link differenceInCalendarISOWeeks} function options.\n */\n\n/**\n * @name differenceInCalendarISOWeeks\n * @category ISO Week Helpers\n * @summary Get the number of calendar ISO weeks between the given dates.\n *\n * @description\n * Get the number of calendar ISO weeks between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of calendar ISO weeks\n *\n * @example\n * // How many calendar ISO weeks are between 6 July 2014 and 21 July 2014?\n * const result = differenceInCalendarISOWeeks(\n *   new Date(2014, 6, 21),\n *   new Date(2014, 6, 6),\n * );\n * //=> 3\n */\n\n\nfunction differenceInCalendarISOWeeks(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = (0, _index2.normalizeDates)(options?.in, laterDate, earlierDate);\n  const startOfISOWeekLeft = (0, _index4.startOfISOWeek)(laterDate_);\n  const startOfISOWeekRight = (0, _index4.startOfISOWeek)(earlierDate_);\n  const timestampLeft = +startOfISOWeekLeft - (0, _index.getTimezoneOffsetInMilliseconds)(startOfISOWeekLeft);\n  const timestampRight = +startOfISOWeekRight - (0, _index.getTimezoneOffsetInMilliseconds)(startOfISOWeekRight); // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n\n  return Math.round((timestampLeft - timestampRight) / _index3.millisecondsInWeek);\n}","map":null,"metadata":{},"sourceType":"script"}