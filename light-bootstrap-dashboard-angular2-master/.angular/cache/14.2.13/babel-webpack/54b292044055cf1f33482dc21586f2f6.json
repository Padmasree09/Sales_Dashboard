{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar _a;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TablesComponent = void 0;\n\nconst core_1 = require(\"@angular/core\");\n\nlet TablesComponent = class TablesComponent {\n  constructor(salesService) {\n    this.salesService = salesService;\n    this.salesData = []; // Will hold the sales data\n  }\n\n  ngOnInit() {\n    this.fetchSalesData(); // Fetch data on component initialization\n  } // Method to fetch sales data\n\n\n  fetchSalesData() {\n    this.salesService.getSalesReport().subscribe(data => {\n      this.salesData = data; // Assign the data to salesData\n\n      console.log(this.salesData); // Optionally log the data\n    }, error => {\n      console.error('Error fetching sales data:', error);\n    });\n  }\n\n};\nTablesComponent = __decorate([(0, core_1.Component)({\n  selector: \"app-tables\",\n  templateUrl: \"./tables.component.html\",\n  styleUrls: [\"./tables.component.css\"]\n}), __metadata(\"design:paramtypes\", [typeof (_a = typeof SalesService !== \"undefined\" && SalesService) === \"function\" ? _a : Object])], TablesComponent);\nexports.TablesComponent = TablesComponent;","map":null,"metadata":{},"sourceType":"script"}