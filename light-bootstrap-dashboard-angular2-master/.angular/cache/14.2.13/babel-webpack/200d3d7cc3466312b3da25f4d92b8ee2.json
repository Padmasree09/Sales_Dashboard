{"ast":null,"code":"\"use strict\";\n\nexports.isSameISOWeekYear = isSameISOWeekYear;\n\nvar _index = require(\"./startOfISOWeekYear.cjs\");\n\nvar _index2 = require(\"./_lib/normalizeDates.cjs\");\n/**\n * The {@link isSameISOWeekYear} function options.\n */\n\n/**\n * @name isSameISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Are the given dates in the same ISO week-numbering year?\n *\n * @description\n * Are the given dates in the same ISO week-numbering year?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param laterDate - The first date to check\n * @param earlierDate - The second date to check\n * @param options - An object with options\n *\n * @returns The dates are in the same ISO week-numbering year\n *\n * @example\n * // Are 29 December 2003 and 2 January 2005 in the same ISO week-numbering year?\n * const result = isSameISOWeekYear(new Date(2003, 11, 29), new Date(2005, 0, 2))\n * //=> true\n */\n\n\nfunction isSameISOWeekYear(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = (0, _index2.normalizeDates)(options?.in, laterDate, earlierDate);\n  return +(0, _index.startOfISOWeekYear)(laterDate_) === +(0, _index.startOfISOWeekYear)(earlierDate_);\n}","map":null,"metadata":{},"sourceType":"script"}