{"ast":null,"code":"\"use strict\";\n\nexports.nextDay = nextDay;\n\nvar _index = require(\"./addDays.cjs\");\n\nvar _index2 = require(\"./getDay.cjs\");\n/**\n * The {@link nextDay} function options.\n */\n\n/**\n * @name nextDay\n * @category Weekday Helpers\n * @summary When is the next day of the week? 0-6 the day of the week, 0 represents Sunday.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to check\n * @param day - Day of the week\n * @param options - An object with options\n *\n * @returns The date is the next day of the week\n *\n * @example\n * // When is the next Monday after Mar, 20, 2020?\n * const result = nextDay(new Date(2020, 2, 20), 1)\n * //=> Mon Mar 23 2020 00:00:00\n *\n * @example\n * // When is the next Tuesday after Mar, 21, 2020?\n * const result = nextDay(new Date(2020, 2, 21), 2)\n * //=> Tue Mar 24 2020 00:00:00\n */\n\n\nfunction nextDay(date, day, options) {\n  let delta = day - (0, _index2.getDay)(date, options);\n  if (delta <= 0) delta += 7;\n  return (0, _index.addDays)(date, delta, options);\n}","map":null,"metadata":{},"sourceType":"script"}