{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TestChartComponent = void 0;\n\nconst lbd_chart_component_1 = require(\"app/lbd/lbd-chart/lbd-chart.component\");\n\nconst i0 = require(\"@angular/core\");\n\nconst i1 = require(\"@angular/common\");\n\nconst i2 = require(\"@angular/material/tabs\");\n\nconst i3 = require(\"../lbd/lbd-chart/lbd-chart.component\");\n\nfunction TestChartComponent_tr_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtext(13);\n    i0.ɵɵpipe(14, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵpipe(17, \"currency\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const sale_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(sale_r1[\"Sales Order\"]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(sale_r1[\"Sales Office\"]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 7, sale_r1[\"Document Date\"]));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(sale_r1[\"Customer Name\"]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(sale_r1[\"Material\"]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(14, 9, sale_r1[\"SO Value\"]));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(17, 11, sale_r1[\"Amount Invoiced\"]));\n  }\n}\n\nconst _c0 = function () {\n  return [\"Test A\", \"Test B\"];\n};\n\nconst _c1 = function () {\n  return [10, 20];\n};\n\nconst _c2 = function () {\n  return [\"#FF6384\", \"#36A2EB\"];\n};\n\nconst _c3 = function (a0, a1) {\n  return {\n    data: a0,\n    backgroundColor: a1\n  };\n};\n\nconst _c4 = function (a0) {\n  return [a0];\n};\n\nconst _c5 = function (a0, a1) {\n  return {\n    labels: a0,\n    datasets: a1\n  };\n};\n\nclass TestChartComponent {\n  constructor() {\n    this.kpiData = [{\n      label: \"Total Sales\",\n      value: \"$50,000\"\n    }, {\n      label: \"Customer Satisfaction\",\n      value: \"85%\"\n    }, {\n      label: \"New Customers\",\n      value: \"150\"\n    }, {\n      label: \"Website Traffic\",\n      value: \"2,300 visitors\"\n    }, {\n      label: \"Conversion Rate\",\n      value: \"10%\"\n    }, {\n      label: \"Return on Investment\",\n      value: \"20%\"\n    }]; // Your KPI data\n\n    this.barChartData = []; // Data for the bar chart\n\n    this.lineChartData = {}; // Data for the line chart\n\n    this.barChartOptions = {\n      seriesBarDistance: 10\n    }; // Options for the bar chart\n\n    this.lineChartOptions = {}; // Options for the line chart\n\n    this.legendItems = []; // Legend items for the chart\n\n    this.barLegendItems = [];\n    this.lineLegendItems = [];\n    this.customerChartType = lbd_chart_component_1.ChartType.Bar;\n    this.pieChartType = lbd_chart_component_1.ChartType.Pie;\n    this.lineChartType = lbd_chart_component_1.ChartType.Line;\n    this.barChartLabels = [];\n    this.pieChartData = {\n      labels: [\"Customer A\", \"Customer B\", \"Customer C\", \"Customer D\"],\n      datasets: [{\n        data: [300, 500, 100, 200],\n        backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#4BC0C0\"]\n      }]\n    };\n    this.pieChartOptions = {\n      labelInterpolationFnc: value => value\n    };\n    this.pieLegendItems = [{\n      title: \"Customer A\",\n      imageClass: \"fa fa-circle text-info\"\n    }, {\n      title: \"Customer B\",\n      imageClass: \"fa fa-circle text-danger\"\n    }, {\n      title: \"Customer C\",\n      imageClass: \"fa fa-circle text-warning\"\n    }, {\n      title: \"Customer D\",\n      imageClass: \"fa fa-circle text-primary\"\n    }]; // Pie chart variables\n\n    this.pieChartLabels = []; // Dummy sales data to simulate API response\n\n    this.salesData = [{\n      Sales_Document_Number: \"10001\",\n      Net_Value_Document_Currency: 1200,\n      Customer_Name: \"Customer A\"\n    }, {\n      Sales_Document_Number: \"10002\",\n      Net_Value_Document_Currency: 950,\n      Customer_Name: \"Customer B\"\n    }, {\n      Sales_Document_Number: \"10003\",\n      Net_Value_Document_Currency: 800,\n      Customer_Name: \"Customer A\"\n    }, {\n      Sales_Document_Number: \"10004\",\n      Net_Value_Document_Currency: 450,\n      Customer_Name: \"Customer C\"\n    }, {\n      Sales_Document_Number: \"10005\",\n      Net_Value_Document_Currency: 2000,\n      Customer_Name: \"Customer B\"\n    }];\n  }\n\n  ngOnInit() {\n    // Using the dummy data to prepare the chart\n    this.pieChartData = {\n      labels: [\"Test A\", \"Test B\"],\n      datasets: [{\n        data: [10, 20],\n        backgroundColor: [\"#FF6384\", \"#36A2EB\"]\n      }]\n    };\n    this.barChartData = [{\n      data: [100, 200, 300],\n      label: \"Test Data\"\n    }];\n    console.log(\"Pie Chart Data:\", this.pieChartData);\n    console.log(\"Bar Chart Data:\", this.barChartData);\n  } // Prepare bar chart data (Net Value per Sales Document)\n\n\n  prepareBarChartData() {\n    const salesDocumentNumbers = this.salesData.map(item => item.Sales_Document_Number);\n    const netValues = this.salesData.map(item => item.Net_Value_Document_Currency);\n    this.barChartLabels = salesDocumentNumbers;\n    this.barChartData = [{\n      data: netValues,\n      label: \"Net Value\"\n    }];\n  } // Prepare pie chart data (Customer Distribution)\n\n\n  preparePieChartData() {\n    const customerNames = this.salesData.map(item => item.Customer_Name);\n    const customerCount = {};\n    customerNames.forEach(name => {\n      customerCount[name] = (customerCount[name] || 0) + 1;\n    }); // Prepare the pieChartData structure\n\n    this.pieChartData = {\n      labels: Object.keys(customerCount),\n      datasets: [{\n        data: Object.values(customerCount),\n        backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#4BC0C0\"]\n      }]\n    };\n  }\n\n}\n\nexports.TestChartComponent = TestChartComponent;\n\nTestChartComponent.ɵfac = function TestChartComponent_Factory(t) {\n  return new (t || TestChartComponent)();\n};\n\nTestChartComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TestChartComponent,\n  selectors: [[\"app-test-chart\"]],\n  decls: 36,\n  vars: 31,\n  consts: [[\"label\", \"Top 5 Customers\"], [1, \"kpi-layout\"], [1, \"kpi-data-and-graph\"], [1, \"kpi-data\"], [1, \"title\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [1, \"kpi-graph-right\"], [3, \"title\", \"subtitle\", \"chartClass\", \"chartType\", \"chartData\", \"chartOptions\", \"legendItems\", \"footerIconClass\", \"footerText\", \"withHr\"], [1, \"kpi-graph-bottom\"], [\"label\", \"Material Group\"], [\"label\", \"Sales\"], [\"label\", \"Transactions\"], [\"label\", \"Updates\"], [\"label\", \"Material Qty\"], [\"label\", \"Finance\"]],\n  template: function TestChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-tab-group\")(1, \"mat-tab\", 0)(2, \"div\", 1)(3, \"div\", 2)(4, \"div\", 3)(5, \"h4\", 4);\n      i0.ɵɵtext(6, \"Sales Data Table\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"table\", 5)(8, \"thead\")(9, \"tr\")(10, \"th\");\n      i0.ɵɵtext(11, \"Sales Order\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\");\n      i0.ɵɵtext(13, \"Sales Office\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\");\n      i0.ɵɵtext(15, \"Document Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"th\");\n      i0.ɵɵtext(17, \"Customer Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"th\");\n      i0.ɵɵtext(19, \"Material\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"th\");\n      i0.ɵɵtext(21, \"SO Value\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"th\");\n      i0.ɵɵtext(23, \"Amount Invoiced\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(24, \"tbody\");\n      i0.ɵɵtemplate(25, TestChartComponent_tr_25_Template, 18, 13, \"tr\", 6);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(26, \"div\", 7);\n      i0.ɵɵelement(27, \"lbd-chart\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(28, \"div\", 9);\n      i0.ɵɵelement(29, \"lbd-chart\", 8);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(30, \"mat-tab\", 10)(31, \"mat-tab\", 11)(32, \"mat-tab\", 12)(33, \"mat-tab\", 13)(34, \"mat-tab\", 14)(35, \"mat-tab\", 15);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(25);\n      i0.ɵɵproperty(\"ngForOf\", ctx.salesData);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"title\", \"Customer Distribution\")(\"subtitle\", \"Based on Sales Data\")(\"chartClass\", \"chart-class\")(\"chartData\", i0.ɵɵpureFunction2(28, _c5, i0.ɵɵpureFunction0(20, _c0), i0.ɵɵpureFunction1(26, _c4, i0.ɵɵpureFunction2(23, _c3, i0.ɵɵpureFunction0(21, _c1), i0.ɵɵpureFunction0(22, _c2)))))(\"chartOptions\", ctx.pieChartOptions)(\"legendItems\", ctx.pieLegendItems)(\"footerIconClass\", \"icon-class\")(\"footerText\", \"This is the pie chart footer\")(\"withHr\", true);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"title\", \"Bar Chart\")(\"subtitle\", \"Your subtitle here\")(\"chartClass\", \"chart-class\")(\"chartType\", ctx.customerChartType)(\"chartData\", ctx.barChartData)(\"chartOptions\", ctx.barChartOptions)(\"legendItems\", ctx.barLegendItems)(\"footerIconClass\", \"icon-class\")(\"footerText\", \"Footer text\")(\"withHr\", true);\n    }\n  },\n  dependencies: [i1.NgForOf, i2.MatTabGroup, i2.MatTab, i3.LbdChartComponent, i1.CurrencyPipe, i1.DatePipe],\n  styles: [\".kpi-layout[_ngcontent-%COMP%]{display:flex;flex-direction:column}.kpi-data-and-graph[_ngcontent-%COMP%]{display:flex;justify-content:space-between;margin-bottom:20px}.kpi-data[_ngcontent-%COMP%]{flex:1;padding-right:10px}.table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{font-weight:700;background-color:#f8f9fa;color:#333;border-bottom:2px solid #dee2e6}.kpi-graph-right[_ngcontent-%COMP%]{flex:1;min-width:300px}.kpi-graph-bottom[_ngcontent-%COMP%]{margin-top:20px;min-height:300px}\"]\n});","map":null,"metadata":{},"sourceType":"script"}