{"ast":null,"code":"\"use strict\";\n\nexports.differenceInISOWeekYears = differenceInISOWeekYears;\n\nvar _index = require(\"./_lib/normalizeDates.cjs\");\n\nvar _index2 = require(\"./compareAsc.cjs\");\n\nvar _index3 = require(\"./differenceInCalendarISOWeekYears.cjs\");\n\nvar _index4 = require(\"./subISOWeekYears.cjs\");\n/**\n * The {@link differenceInISOWeekYears} function options.\n */\n\n/**\n * @name differenceInISOWeekYears\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of full ISO week-numbering years between the given dates.\n *\n * @description\n * Get the number of full ISO week-numbering years between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - The options\n *\n * @returns The number of full ISO week-numbering years\n *\n * @example\n * // How many full ISO week-numbering years are between 1 January 2010 and 1 January 2012?\n * const result = differenceInISOWeekYears(\n *   new Date(2012, 0, 1),\n *   new Date(2010, 0, 1)\n * )\n * // => 1\n */\n\n\nfunction differenceInISOWeekYears(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = (0, _index.normalizeDates)(options?.in, laterDate, earlierDate);\n  const sign = (0, _index2.compareAsc)(laterDate_, earlierDate_);\n  const diff = Math.abs((0, _index3.differenceInCalendarISOWeekYears)(laterDate_, earlierDate_, options));\n  const adjustedDate = (0, _index4.subISOWeekYears)(laterDate_, sign * diff, options);\n  const isLastISOWeekYearNotFull = Number((0, _index2.compareAsc)(adjustedDate, earlierDate_) === -sign);\n  const result = sign * (diff - isLastISOWeekYearNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","map":null,"metadata":{},"sourceType":"script"}