{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar _a;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SalesDashboardComponent = void 0;\n\nconst core_1 = require(\"@angular/core\");\n\nlet SalesDashboardComponent = class SalesDashboardComponent {\n  constructor(salesService) {\n    this.salesService = salesService;\n    this.salesData = [];\n    this.customerChartData = {};\n    this.materialGroupChartData = {};\n    this.customerChartType = \"bar\"; // Example chart type\n\n    this.materialGroupChartType = \"pie\"; // Example chart type\n\n    this.customerChartLegendItems = [];\n    this.materialGroupChartLegendItems = [];\n    this.lastUpdated = \"\";\n  }\n\n  onDateSubmit() {\n    if (this.fromDate && this.toDate) {\n      this.fetchSalesData(this.fromDate, this.toDate);\n    }\n  }\n\n  fetchSalesData(fromDate, toDate) {\n    this.salesService.getSalesData(fromDate, toDate).subscribe(data => {\n      this.salesData = data.sales; // Assuming data has sales array\n\n      this.customerChartData = this.prepareCustomerChartData(data.customers);\n      this.materialGroupChartData = this.prepareMaterialGroupChartData(data.materialGroups);\n      this.lastUpdated = new Date().toLocaleString(); // Update timestamp\n    });\n  }\n\n  prepareCustomerChartData(customers) {\n    // Prepare chart data for top customers\n    return {\n      labels: customers.map(customer => customer.name),\n      datasets: [{\n        label: \"Sales\",\n        data: customers.map(customer => customer.totalSales),\n        backgroundColor: \"rgba(75, 192, 192, 0.2)\",\n        borderColor: \"rgba(75, 192, 192, 1)\",\n        borderWidth: 1\n      }]\n    };\n  }\n\n  prepareMaterialGroupChartData(materialGroups) {\n    // Prepare chart data for material groups\n    return {\n      labels: materialGroups.map(group => group.name),\n      datasets: [{\n        data: materialGroups.map(group => group.totalSales),\n        backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#4BC0C0\", \"#9966FF\"]\n      }]\n    };\n  }\n\n};\nSalesDashboardComponent = __decorate([(0, core_1.Component)({\n  selector: \"app-sales-dashboard\",\n  templateUrl: \"./sales-dashboard.component.html\",\n  styleUrls: [\"./sales-dashboard.component.css\"]\n}), __metadata(\"design:paramtypes\", [typeof (_a = typeof SalesService !== \"undefined\" && SalesService) === \"function\" ? _a : Object])], SalesDashboardComponent);\nexports.SalesDashboardComponent = SalesDashboardComponent;","map":null,"metadata":{},"sourceType":"script"}