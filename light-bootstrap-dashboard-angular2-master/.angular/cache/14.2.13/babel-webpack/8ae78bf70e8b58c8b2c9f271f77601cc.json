{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SidebarComponent = exports.ROUTES = void 0;\n\nconst common_1 = require(\"@angular/common\");\n\nconst core_1 = require(\"@angular/core\");\n\nconst esm_1 = require(\"date-fns/esm\");\n\nconst i0 = require(\"@angular/core\");\n\nconst i1 = require(\"@angular/forms\");\n\nexports.ROUTES = [{\n  path: \"/dashboard\",\n  title: \"Dashboard\",\n  icon: \"pe-7s-graph\",\n  class: \"\"\n}, {\n  path: \"/user\",\n  title: \"User Profile\",\n  icon: \"pe-7s-user\",\n  class: \"\"\n}, {\n  path: \"/table\",\n  title: \"Data \",\n  icon: \"pe-7s-note2\",\n  class: \"\"\n}, // { path: '/typography', title: 'Typography',  icon:'pe-7s-news-paper', class: '' },\n{\n  path: \"/icons\",\n  title: \"Icons\",\n  icon: \"pe-7s-science\",\n  class: \"\"\n}, //{ path: '/maps', title: 'Maps',  icon:'pe-7s-map-marker', class: '' },\n{\n  path: \"/notifications\",\n  title: \"Notifications\",\n  icon: \"pe-7s-bell\",\n  class: \"\"\n} // { path: '/upgrade', title: 'Upgrade to PRO',  icon:'pe-7s-rocket', class: 'active-pro' },\n];\n\nclass SidebarComponent {\n  constructor() {\n    this.displayFromDate = \"\";\n    this.displayToDate = \"\";\n    this.dateRangeChange = new core_1.EventEmitter();\n    this.menuItems = [{\n      path: \"/dashboard\",\n      icon: \"fa fa-dashboard\",\n      title: \"Dashboard\",\n      class: \"\"\n    }, {\n      path: \"/reports\",\n      icon: \"fa fa-bar-chart\",\n      title: \"Reports\",\n      class: \"\"\n    } // Add other menu items here\n    ];\n  }\n\n  onFromDateChange(date) {\n    this.fromDate = date;\n    this.displayFromDate = this.formatDateForDisplay(new Date(date));\n    this.emitDateRange();\n  }\n\n  onToDateChange(date) {\n    this.toDate = date;\n    this.displayToDate = this.formatDateForDisplay(new Date(date));\n    this.emitDateRange();\n  }\n\n  emitDateRange() {\n    if (this.fromDate && this.toDate) {\n      console.log(\"Emitting Date Range:\", this.fromDate, this.toDate);\n      this.dateRangeChange.emit({\n        from: this.formatDate(new Date(this.fromDate)),\n        to: this.formatDate(new Date(this.toDate))\n      });\n      console.log(\"Date Range Changed:\", this.displayFromDate, this.displayToDate);\n    }\n  }\n\n  formatDate(date) {\n    // Format the JavaScript Date object directly to \"dd-MM-yyyy\"\n    return (0, esm_1.format)(date, \"dd-MM-yyyy\");\n  }\n\n  formatDateForDisplay(date) {\n    const day = date.getDate().toString().padStart(2, \"0\");\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n    const year = date.getFullYear();\n    return `${day}/${month}/${year}`;\n  }\n\n  ngOnInit() {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  isMobileMenu() {\n    return window.innerWidth <= 991;\n  }\n\n}\n\nexports.SidebarComponent = SidebarComponent;\n\nSidebarComponent.ɵfac = function SidebarComponent_Factory(t) {\n  return new (t || SidebarComponent)();\n};\n\nSidebarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SidebarComponent,\n  selectors: [[\"app-sidebar\"]],\n  outputs: {\n    dateRangeChange: \"dateRangeChange\"\n  },\n  features: [i0.ɵɵProvidersFeature([common_1.DatePipe])],\n  decls: 11,\n  vars: 2,\n  consts: [[1, \"sidebar-wrapper\", 2, \"padding\", \"20px\", \"background-color\", \"#063970\", \"color\", \"white\"], [1, \"logo-container\", 2, \"display\", \"flex\", \"justify-content\", \"center\", \"align-items\", \"center\", \"height\", \"100px\"], [\"src\", \"/assets/img/ramky.png\", \"alt\", \"sharvi infotech Logo\", 2, \"width\", \"100px\", \"/* set width */\\n        height\", \"100px\", \"/* set height */\\n        border-radius\", \"50%\", \"/* makes the image circular */\\n        border\", \"3px solid #0072ff\", \"/* add a border, adjust color as needed */\\n        box-shadow\", \"0 4px 8px rgba(0, 114, 255, 0.3)\", \"/* subtle shadow for depth */\\n        transition\", \"transform 0.3s ease, box-shadow 0.3s ease\"], [1, \"date-picker\"], [\"for\", \"fromDate\", 2, \"display\", \"block\", \"margin-top\", \"50px\", \"color\", \"white\"], [\"type\", \"date\", \"id\", \"fromDate\", 1, \"form-control\", 2, \"width\", \"75%\", \"padding\", \"8px\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"toDate\", 2, \"display\", \"block\", \"margin-top\", \"10px\", \"color\", \"white\"], [\"type\", \"date\", \"id\", \"toDate\", 1, \"form-control\", 2, \"width\", \"75%\", \"padding\", \"8px\", \"margin-bottom\", \"10px\", 3, \"ngModel\", \"ngModelChange\"], [2, \"text-align\", \"center\", \"margin-top\", \"30px\"]],\n  template: function SidebarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵelement(2, \"img\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 3)(4, \"label\", 4);\n      i0.ɵɵtext(5, \"From\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function SidebarComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.fromDate = $event;\n      })(\"ngModelChange\", function SidebarComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.onFromDateChange($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"label\", 6);\n      i0.ɵɵtext(8, \"To\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function SidebarComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.onToDateChange($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(10, \"div\", 8);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.fromDate);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.toDate);\n    }\n  },\n  dependencies: [i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgModel],\n  encapsulation: 2\n});","map":null,"metadata":{},"sourceType":"script"}