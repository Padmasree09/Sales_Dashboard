{"ast":null,"code":"\"use strict\";\n\nexports.getISOWeek = getISOWeek;\n\nvar _index = require(\"./constants.cjs\");\n\nvar _index2 = require(\"./startOfISOWeek.cjs\");\n\nvar _index3 = require(\"./startOfISOWeekYear.cjs\");\n\nvar _index4 = require(\"./toDate.cjs\");\n/**\n * The {@link getISOWeek} function options.\n */\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\n\n\nfunction getISOWeek(date, options) {\n  const _date = (0, _index4.toDate)(date, options?.in);\n\n  const diff = +(0, _index2.startOfISOWeek)(_date) - +(0, _index3.startOfISOWeekYear)(_date); // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n\n  return Math.round(diff / _index.millisecondsInWeek) + 1;\n}","map":null,"metadata":{},"sourceType":"script"}