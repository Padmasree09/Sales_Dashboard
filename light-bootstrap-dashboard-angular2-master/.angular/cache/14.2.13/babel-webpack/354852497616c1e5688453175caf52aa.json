{"ast":null,"code":"\"use strict\";\n\nexports.ISOWeekYearParser = void 0;\n\nvar _index = require(\"../../../startOfISOWeek.cjs\");\n\nvar _index2 = require(\"../../../constructFrom.cjs\");\n\nvar _Parser = require(\"../Parser.cjs\");\n\nvar _utils = require(\"../utils.cjs\"); // ISO week-numbering year\n\n\nclass ISOWeekYearParser extends _Parser.Parser {\n  priority = 130;\n\n  parse(dateString, token) {\n    if (token === \"R\") {\n      return (0, _utils.parseNDigitsSigned)(4, dateString);\n    }\n\n    return (0, _utils.parseNDigitsSigned)(token.length, dateString);\n  }\n\n  set(date, _flags, value) {\n    const firstWeekOfYear = (0, _index2.constructFrom)(date, 0);\n    firstWeekOfYear.setFullYear(value, 0, 4);\n    firstWeekOfYear.setHours(0, 0, 0, 0);\n    return (0, _index.startOfISOWeek)(firstWeekOfYear);\n  }\n\n  incompatibleTokens = [\"G\", \"y\", \"Y\", \"u\", \"Q\", \"q\", \"M\", \"L\", \"w\", \"d\", \"D\", \"e\", \"c\", \"t\", \"T\"];\n}\n\nexports.ISOWeekYearParser = ISOWeekYearParser;","map":null,"metadata":{},"sourceType":"script"}