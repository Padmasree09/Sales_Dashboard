{"ast":null,"code":"\"use strict\";\n\nexports.Hour0To11Parser = void 0;\n\nvar _constants = require(\"../constants.cjs\");\n\nvar _Parser = require(\"../Parser.cjs\");\n\nvar _utils = require(\"../utils.cjs\");\n\nclass Hour0To11Parser extends _Parser.Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"K\":\n        return (0, _utils.parseNumericPattern)(_constants.numericPatterns.hour11h, dateString);\n\n      case \"Ko\":\n        return match.ordinalNumber(dateString, {\n          unit: \"hour\"\n        });\n\n      default:\n        return (0, _utils.parseNDigits)(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    const isPM = date.getHours() >= 12;\n\n    if (isPM && value < 12) {\n      date.setHours(value + 12, 0, 0, 0);\n    } else {\n      date.setHours(value, 0, 0, 0);\n    }\n\n    return date;\n  }\n\n  incompatibleTokens = [\"h\", \"H\", \"k\", \"t\", \"T\"];\n}\n\nexports.Hour0To11Parser = Hour0To11Parser;","map":null,"metadata":{},"sourceType":"script"}