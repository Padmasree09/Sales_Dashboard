{"ast":null,"code":"\"use strict\";\n\nexports.intervalToDuration = intervalToDuration;\n\nvar _index = require(\"./_lib/normalizeInterval.cjs\");\n\nvar _index2 = require(\"./add.cjs\");\n\nvar _index3 = require(\"./differenceInDays.cjs\");\n\nvar _index4 = require(\"./differenceInHours.cjs\");\n\nvar _index5 = require(\"./differenceInMinutes.cjs\");\n\nvar _index6 = require(\"./differenceInMonths.cjs\");\n\nvar _index7 = require(\"./differenceInSeconds.cjs\");\n\nvar _index8 = require(\"./differenceInYears.cjs\");\n/**\n * The {@link intervalToDuration} function options.\n */\n\n/**\n * @name intervalToDuration\n * @category Common Helpers\n * @summary Convert interval to duration\n *\n * @description\n * Convert an interval object to a duration object.\n *\n * @param interval - The interval to convert to duration\n * @param options - The context options\n *\n * @returns The duration object\n *\n * @example\n * // Get the duration between January 15, 1929 and April 4, 1968.\n * intervalToDuration({\n *   start: new Date(1929, 0, 15, 12, 0, 0),\n *   end: new Date(1968, 3, 4, 19, 5, 0)\n * });\n * //=> { years: 39, months: 2, days: 20, hours: 7, minutes: 5, seconds: 0 }\n */\n\n\nfunction intervalToDuration(interval, options) {\n  const {\n    start,\n    end\n  } = (0, _index.normalizeInterval)(options?.in, interval);\n  const duration = {};\n  const years = (0, _index8.differenceInYears)(end, start);\n  if (years) duration.years = years;\n  const remainingMonths = (0, _index2.add)(start, {\n    years: duration.years\n  });\n  const months = (0, _index6.differenceInMonths)(end, remainingMonths);\n  if (months) duration.months = months;\n  const remainingDays = (0, _index2.add)(remainingMonths, {\n    months: duration.months\n  });\n  const days = (0, _index3.differenceInDays)(end, remainingDays);\n  if (days) duration.days = days;\n  const remainingHours = (0, _index2.add)(remainingDays, {\n    days: duration.days\n  });\n  const hours = (0, _index4.differenceInHours)(end, remainingHours);\n  if (hours) duration.hours = hours;\n  const remainingMinutes = (0, _index2.add)(remainingHours, {\n    hours: duration.hours\n  });\n  const minutes = (0, _index5.differenceInMinutes)(end, remainingMinutes);\n  if (minutes) duration.minutes = minutes;\n  const remainingSeconds = (0, _index2.add)(remainingMinutes, {\n    minutes: duration.minutes\n  });\n  const seconds = (0, _index7.differenceInSeconds)(end, remainingSeconds);\n  if (seconds) duration.seconds = seconds;\n  return duration;\n}","map":null,"metadata":{},"sourceType":"script"}