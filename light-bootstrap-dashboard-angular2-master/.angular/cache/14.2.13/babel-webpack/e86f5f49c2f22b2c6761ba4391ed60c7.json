{"ast":null,"code":"\"use strict\";\n\nexports.eachWeekendOfInterval = eachWeekendOfInterval;\n\nvar _index = require(\"./_lib/normalizeInterval.cjs\");\n\nvar _index2 = require(\"./constructFrom.cjs\");\n\nvar _index3 = require(\"./eachDayOfInterval.cjs\");\n\nvar _index4 = require(\"./isWeekend.cjs\");\n/**\n * The {@link eachWeekendOfInterval} function options.\n */\n\n/**\n * The {@link eachWeekendOfInterval} function result type.\n */\n\n/**\n * @name eachWeekendOfInterval\n * @category Interval Helpers\n * @summary List all the Saturdays and Sundays in the given date interval.\n *\n * @description\n * Get all the Saturdays and Sundays in the given date interval.\n *\n * @typeParam IntervalType - Interval type.\n * @typeParam Options - Options type.\n *\n * @param interval - The given interval\n * @param options - An object with options\n *\n * @returns An array containing all the Saturdays and Sundays\n *\n * @example\n * // Lists all Saturdays and Sundays in the given date interval\n * const result = eachWeekendOfInterval({\n *   start: new Date(2018, 8, 17),\n *   end: new Date(2018, 8, 30)\n * })\n * //=> [\n * //   Sat Sep 22 2018 00:00:00,\n * //   Sun Sep 23 2018 00:00:00,\n * //   Sat Sep 29 2018 00:00:00,\n * //   Sun Sep 30 2018 00:00:00\n * // ]\n */\n\n\nfunction eachWeekendOfInterval(interval, options) {\n  const {\n    start,\n    end\n  } = (0, _index.normalizeInterval)(options?.in, interval);\n  const dateInterval = (0, _index3.eachDayOfInterval)({\n    start,\n    end\n  }, options);\n  const weekends = [];\n  let index = 0;\n\n  while (index < dateInterval.length) {\n    const date = dateInterval[index++];\n    if ((0, _index4.isWeekend)(date)) weekends.push((0, _index2.constructFrom)(start, date));\n  }\n\n  return weekends;\n}","map":null,"metadata":{},"sourceType":"script"}