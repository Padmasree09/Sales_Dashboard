{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TestChartComponent = void 0;\n\nconst core_1 = require(\"@angular/core\");\n\nconst lbd_chart_component_1 = require(\"app/lbd/lbd-chart/lbd-chart.component\");\n\nlet TestChartComponent = class TestChartComponent {\n  constructor() {\n    this.kpiData = [{\n      label: \"Total Sales\",\n      value: \"$50,000\"\n    }, {\n      label: \"Customer Satisfaction\",\n      value: \"85%\"\n    }, {\n      label: \"New Customers\",\n      value: \"150\"\n    }, {\n      label: \"Website Traffic\",\n      value: \"2,300 visitors\"\n    }, {\n      label: \"Conversion Rate\",\n      value: \"10%\"\n    }, {\n      label: \"Return on Investment\",\n      value: \"20%\"\n    }]; // Your KPI data\n\n    this.barChartData = []; // Data for the bar chart\n\n    this.lineChartData = {}; // Data for the line chart\n\n    this.barChartOptions = {\n      seriesBarDistance: 10\n    }; // Options for the bar chart\n\n    this.lineChartOptions = {}; // Options for the line chart\n\n    this.legendItems = []; // Legend items for the chart\n\n    this.barLegendItems = [];\n    this.lineLegendItems = [];\n    this.customerChartType = lbd_chart_component_1.ChartType.Bar;\n    this.pieChartType = lbd_chart_component_1.ChartType.Pie;\n    this.lineChartType = lbd_chart_component_1.ChartType.Line;\n    this.barChartLabels = [];\n    this.pieChartData = {\n      labels: [\"Customer A\", \"Customer B\", \"Customer C\", \"Customer D\"],\n      datasets: [{\n        data: [300, 500, 100, 200],\n        backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#4BC0C0\"]\n      }]\n    };\n    this.pieChartOptions = {\n      labelInterpolationFnc: value => value\n    };\n    this.pieLegendItems = [{\n      title: \"Customer A\",\n      imageClass: \"fa fa-circle text-info\"\n    }, {\n      title: \"Customer B\",\n      imageClass: \"fa fa-circle text-danger\"\n    }, {\n      title: \"Customer C\",\n      imageClass: \"fa fa-circle text-warning\"\n    }, {\n      title: \"Customer D\",\n      imageClass: \"fa fa-circle text-primary\"\n    }]; // Pie chart variables\n\n    this.pieChartLabels = []; // Dummy sales data to simulate API response\n\n    this.salesData = [{\n      Sales_Document_Number: \"10001\",\n      Net_Value_Document_Currency: 1200,\n      Customer_Name: \"Customer A\"\n    }, {\n      Sales_Document_Number: \"10002\",\n      Net_Value_Document_Currency: 950,\n      Customer_Name: \"Customer B\"\n    }, {\n      Sales_Document_Number: \"10003\",\n      Net_Value_Document_Currency: 800,\n      Customer_Name: \"Customer A\"\n    }, {\n      Sales_Document_Number: \"10004\",\n      Net_Value_Document_Currency: 450,\n      Customer_Name: \"Customer C\"\n    }, {\n      Sales_Document_Number: \"10005\",\n      Net_Value_Document_Currency: 2000,\n      Customer_Name: \"Customer B\"\n    }];\n  }\n\n  ngOnInit() {\n    // Using the dummy data to prepare the chart\n    this.pieChartData = {\n      labels: [\"Test A\", \"Test B\"],\n      datasets: [{\n        data: [10, 20],\n        backgroundColor: [\"#FF6384\", \"#36A2EB\"]\n      }]\n    };\n    this.barChartData = [{\n      data: [100, 200, 300],\n      label: \"Test Data\"\n    }];\n    console.log(\"Pie Chart Data:\", this.pieChartData);\n    console.log(\"Bar Chart Data:\", this.barChartData);\n  } // Prepare bar chart data (Net Value per Sales Document)\n\n\n  prepareBarChartData() {\n    const salesDocumentNumbers = this.salesData.map(item => item.Sales_Document_Number);\n    const netValues = this.salesData.map(item => item.Net_Value_Document_Currency);\n    this.barChartLabels = salesDocumentNumbers;\n    this.barChartData = [{\n      data: netValues,\n      label: \"Net Value\"\n    }];\n  } // Prepare pie chart data (Customer Distribution)\n\n\n  preparePieChartData() {\n    const customerNames = this.salesData.map(item => item.Customer_Name);\n    const customerCount = {};\n    customerNames.forEach(name => {\n      customerCount[name] = (customerCount[name] || 0) + 1;\n    }); // Prepare the pieChartData structure\n\n    this.pieChartData = {\n      labels: Object.keys(customerCount),\n      datasets: [{\n        data: Object.values(customerCount),\n        backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#4BC0C0\"]\n      }]\n    };\n  }\n\n};\nTestChartComponent = __decorate([(0, core_1.Component)({\n  selector: \"app-test-chart\",\n  templateUrl: \"./test-chart.component.html\",\n  styleUrls: [\"./test-chart.component.scss\"]\n}), __metadata(\"design:paramtypes\", [])], TestChartComponent);\nexports.TestChartComponent = TestChartComponent;","map":null,"metadata":{},"sourceType":"script"}