{"ast":null,"code":"\"use strict\";\n\nexports.setISOWeek = setISOWeek;\n\nvar _index = require(\"./getISOWeek.cjs\");\n\nvar _index2 = require(\"./toDate.cjs\");\n/**\n * The {@link setISOWeek} function options.\n */\n\n/**\n * @name setISOWeek\n * @category ISO Week Helpers\n * @summary Set the ISO week to the given date.\n *\n * @description\n * Set the ISO week to the given date, saving the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The `Date` type of the context function.\n *\n * @param date - The date to be changed\n * @param week - The ISO week of the new date\n * @param options - An object with options\n *\n * @returns The new date with the ISO week set\n *\n * @example\n * // Set the 53rd ISO week to 7 August 2004:\n * const result = setISOWeek(new Date(2004, 7, 7), 53)\n * //=> Sat Jan 01 2005 00:00:00\n */\n\n\nfunction setISOWeek(date, week, options) {\n  const _date = (0, _index2.toDate)(date, options?.in);\n\n  const diff = (0, _index.getISOWeek)(_date, options) - week;\n\n  _date.setDate(_date.getDate() - diff * 7);\n\n  return _date;\n}","map":null,"metadata":{},"sourceType":"script"}