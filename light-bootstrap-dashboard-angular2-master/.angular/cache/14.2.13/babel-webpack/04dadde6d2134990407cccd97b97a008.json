{"ast":null,"code":"\"use strict\";\n\nexports.isValid = isValid;\n\nvar _index = require(\"./isDate.cjs\");\n\nvar _index2 = require(\"./toDate.cjs\");\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertible into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\n\n\nfunction isValid(date) {\n  return !(!(0, _index.isDate)(date) && typeof date !== \"number\" || isNaN(+(0, _index2.toDate)(date)));\n}","map":null,"metadata":{},"sourceType":"script"}